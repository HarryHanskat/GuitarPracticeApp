// <auto-generated />
using System;
using GuitarPracticeApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuitarPracticeApp.Migrations
{
    [DbContext(typeof(GuitarPracticeContext))]
    [Migration("20250705153029_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("GuitarPracticeApp.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Bpm")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cagegory")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PracticeSessionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PracticeSessionId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GuitarPracticeApp.Models.PracticeRoutine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PracticeRoutines");
                });

            modelBuilder.Entity("GuitarPracticeApp.Models.PracticeSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PracticeSessions");
                });

            modelBuilder.Entity("GuitarPracticeApp.Models.RoutineExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PracticeRoutineId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PracticeRoutineId");

                    b.ToTable("RoutineExercises");
                });

            modelBuilder.Entity("GuitarPracticeApp.Models.Exercise", b =>
                {
                    b.HasOne("GuitarPracticeApp.Models.PracticeSession", "PracticeSession")
                        .WithMany("Exercises")
                        .HasForeignKey("PracticeSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PracticeSession");
                });

            modelBuilder.Entity("GuitarPracticeApp.Models.RoutineExercise", b =>
                {
                    b.HasOne("GuitarPracticeApp.Models.PracticeRoutine", "PracticeRoutine")
                        .WithMany("Exercises")
                        .HasForeignKey("PracticeRoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PracticeRoutine");
                });

            modelBuilder.Entity("GuitarPracticeApp.Models.PracticeRoutine", b =>
                {
                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("GuitarPracticeApp.Models.PracticeSession", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
